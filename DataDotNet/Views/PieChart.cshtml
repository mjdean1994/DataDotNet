@model DataDotNet.Models.PieChart

<div style="display:inline-block" id="@Model.Title.Replace(" ","")"></div>

<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>
    var width = @Model.Options.OuterRadius * 2;
    var height = @Model.Options.OuterRadius * 2;
    var outerRadius = @Model.Options.OuterRadius;
    var innerRadius = @Model.Options.InnerRadius;
    var color = d3.scale.category10();

    var data = @{ WriteLiteral(Model.DataToJsonArray());}

    var vis = d3.select('#@Model.Title.Replace(" ", "")').append("svg:svg").data([data]).attr("width", width).attr("height", height).append("svg:g").attr("transform", "translate(" + outerRadius + "," + outerRadius + ")");
    var pie = d3.layout.pie().value(function (d) { return d.value; });

    // declare an arc generator function
    var arc = d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius);

    // select paths, use arc generator to draw
    var arcs = vis.selectAll("g.slice").data(pie).enter().append("svg:g").attr("class", "slice");
    arcs.append("svg:path")
        .attr("fill", function(d, i) {
            if (data[i].color) {
                return data[i].color;
            } else {
                return color(i);
            }

        })
        .attr("d", function(d) {
            // log the result of the arc generator to show how cool it is :)
            console.log(arc(d));
            return arc(d);
        })
        .on("mouseover", function(d, i) {
            if (data[i].highlight) {
                this.setAttribute("fill", data[i].highlight);
            }
        })
        .on("mouseout", function(d, i) {
            if (data[i].color) {
                this.setAttribute("fill", data[i].color);
            } else {
                this.setAttribute("fill", color(i));
            }
        });
        if ("@Model.Options.ShowLabels" == "True") {
            // add the text
            arcs.append("svg:text").attr("transform", function(d) {
                d.innerRadius = innerRadius;
                d.outerRadius = outerRadius;
                return "translate(" + arc.centroid(d) + ")";
            }).attr("text-anchor", "middle").text(function(d, i) {
                return data[i].label;
            });
        }
</script>